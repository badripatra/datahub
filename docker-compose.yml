version: '2.1'

services:
  restservices:
    image: 'bpatra/public_images:restservices'
    restart: always
    networks:
      - monitoring_network
    ports:
      - '8083:8083'
    volumes:
      - ./nfsvolume:/nfsvolume:rw
      - ./logs:/logs:rw

  zookeeper:
    image: 'bpatra/public_images:zookeeper'
    restart: always
    volumes:
      - 'zookeeper_data:/bitnami'
    ports:
      - '2181:2181'
    networks:
      - monitoring_network
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bpatra/public_images:kafka'
    restart: always
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami'
    networks:
      - monitoring_network
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
  influxdb:
    image: 'bpatra/public_images:influx'
    restart: always
    ports:
      - '8086:8086'
      - '8088:8088'
    networks:
      monitoring_network:
        ipv4_address: 172.28.1.1
    volumes:
      - ./docker_volume/influxdb:/var/lib/influxdb
      - ./docker_volume/influxdb_conf:/etc/influxdb
    environment:
      - INFLUXDB_DB=datahub
      - INFLUXDB_USER=datahub_influx
      - INFLUXDB_USER_PASSWORD=datahub_influx
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_HTTP_READINESS_TIMEOUT=30
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_USER_PASSWORD=password123
  grafana:
      image: 'bpatra/public_images:grafana'
      restart: always
      ports:
        - '3000:3000'
      networks:
        - monitoring_network
      environment:
        - GF_INSTALL_PLUGINS=grafana-clock-panel
      volumes:
        - ./docker_volume/grafana:/var/lib/grafana
        - ./docker_volume/grafana_dashboards:/var/lib/grafana/dashboards
        - ./docker_volume/grafana_provisioning:/etc/grafana/provisioning
      user: "0"
      links:
        - influxdb

networks:
  monitoring_network:
      ipam:
          driver: default
          config:
              - subnet: 172.28.0.0/16

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local